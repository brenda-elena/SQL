CREATE TABLE singers (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    full_name TEXT,
    origin TEXT,
    age INTEGER);

INSERT INTO singers (full_name, origin, age) VALUES 
("Taylor Swift", "Pennsylvania", 34),
("Katy Perry", "California", 39),
("Ariana Grande", "Florida", 30),
("Miley Cyrus", "Tennessee", 31);

CREATE TABLE songs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    singer_id INTEGER,
    song TEXT,
    album TEXT);

INSERT INTO songs (singer_id, song, album) VALUES 
(4, "Island", "Endless Summer Vacation"),
(2, "Teenage Dream", "The Complete Confection"),
(1, "All Too Well", "Red"),
(3, "The Way", "Yours Truly"),
(2, "I Kissed A Girl", "One Of The Boys");

CREATE TABLE mutual_friend (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    friend1_id INTEGER,
    friend2_id INTEGER);

INSERT INTO mutual_friend (friend1_id, friend2_id) VALUES
(1,2),
(3,4);


/* Show the name of the singers, their songs and album*/

SELECT singers.full_name, songs.song, songs.album
FROM singers
LEFT OUTER JOIN songs ON singers.id = songs.singer_id;

/*Show pairs of singers who are mutual friends*/

SELECT a.full_name AS singer1, b.full_name AS singer2
FROM singers AS a
JOIN mutual_friend AS mf ON a.id = mf.friend1_id
JOIN singers AS b ON mf.friend2_id = b.id;

/*Show singers and their songs and order them by age*/

SELECT singers.full_name, singers.age, songs.song, songs.album
FROM singers
JOIN songs ON singers.id = songs.singer_id
WHERE songs.song IS NOT NULL
ORDER BY singers.age DESC;
