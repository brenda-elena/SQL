CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),

#Use a SELECT statement to order the items by PRICE.
SELECT*FROM superstore
ORDER BY price DESC

#Show a statistic (SUM) about the item prices.
SELECT SUM(price) AS total_price
FROM superstore

#Show a statistic (AVG) about the item prices.
SELECT AVG(price) AS average_price
FROM superstore

#Show a statistic (MIN) about the item prices.
SELECT MIN(price) AS min_price
FROM superstore

#Show a statistic (MAX) about the item prices.
SELECT MAX(price) AS max_price
FROM superstore

#Show a statistic (COUNT) about the item prices.
SELECT COUNT(*) AS total_items
FROM superstore

#Show a statistic (AVG) about the price for items in the category of "Kitchen Supplies".
SELECT AVG(price) AS average_price_kitchen_supplies
FROM superstore
WHERE category = 'Kitchen Supplies'

#Show a statistic about the stock quantity for a specific item: "Wireless Earbuds".
SELECT stock_quantity
FROM superstore
WHERE item_name = 'Wireless Earbuds';
